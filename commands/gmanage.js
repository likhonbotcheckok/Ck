module.exports = (bot) => {
  const { ADMIN_UID, ADMIN_USERNAME } = require('../config/botConfig');

  async function isAdmin(bot, chatId, userId) {
    try {
      const member = await bot.getChatMember(chatId, userId);
      return ['administrator', 'creator'].includes(member.status);
    } catch (err) {
      console.error("ЁЯФ┤ Admin check error:", err);
      return false;
    }
  }

  // ЁЯФТ Lock
  bot.onText(/^\/lock$/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;

    if (!['group', 'supergroup'].includes(msg.chat.type)) {
      return bot.sendMessage(chatId, "тЭМ ржПржЗ ржХржорж╛ржирзНржб рж╢рзБржзрзБ ржЧрзНрж░рзБржкрзЗ ржХрж╛ржЬ ржХрж░рзЗред");
    }

    const adminCheck = await isAdmin(bot, chatId, userId);
    if (!adminCheck) {
      return bot.sendMessage(chatId, "тЫФ рж╢рзБржзрзБржорж╛рждрзНрж░ ржЕрзНржпрж╛ржбржорж┐ржирж░рж╛ ржПржЗ ржХржорж╛ржирзНржб ржЪрж╛рж▓рж╛рждрзЗ ржкрж╛рж░рзЗред");
    }

    try {
      await bot.setChatPermissions(chatId, {
        can_send_messages: false,
        can_send_media_messages: false,
        can_send_polls: false,
        can_send_other_messages: false,
        can_add_web_page_previews: false,
        can_invite_users: false,
        can_pin_messages: false,
        can_change_info: false
      });
      return bot.sendMessage(chatId, "ЁЯФТ ржЧрзНрж░рзБржк ржПржЦржи *рж▓ржХржб* ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред", {
        parse_mode: "Markdown"
      });
    } catch (err) {
      console.error("тЭМ Lock error:", err);
      return bot.sendMessage(chatId, "тЪая╕П рж▓ржХ ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗред");
    }
  });

  // ЁЯФУ Unlock
  bot.onText(/^\/unlock$/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;

    if (!['group', 'supergroup'].includes(msg.chat.type)) {
      return bot.sendMessage(chatId, "тЭМ ржПржЗ ржХржорж╛ржирзНржб рж╢рзБржзрзБ ржЧрзНрж░рзБржкрзЗ ржХрж╛ржЬ ржХрж░рзЗред");
    }

    const adminCheck = await isAdmin(bot, chatId, userId);
    if (!adminCheck) {
      return bot.sendMessage(chatId, "тЫФ рж╢рзБржзрзБржорж╛рждрзНрж░ ржЕрзНржпрж╛ржбржорж┐ржирж░рж╛ ржПржЗ ржХржорж╛ржирзНржб ржЪрж╛рж▓рж╛рждрзЗ ржкрж╛рж░рзЗред");
    }

    try {
      await bot.setChatPermissions(chatId, {
        can_send_messages: true,
        can_send_media_messages: true,
        can_send_polls: true,
        can_send_other_messages: true,
        can_add_web_page_previews: true,
        can_invite_users: true,
        can_pin_messages: true,
        can_change_info: false
      });
      return bot.sendMessage(chatId, "ЁЯФУ ржЧрзНрж░рзБржк ржПржЦржи *ржЖржирж▓ржХржб* ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред", {
        parse_mode: "Markdown"
      });
    } catch (err) {
      console.error("тЭМ Unlock error:", err);
      return bot.sendMessage(chatId, "тЪая╕П ржЖржирж▓ржХ ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗред");
    }
  });
};
