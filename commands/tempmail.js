const { generateRandomEmail, fetchInbox, fetchFullEmail } = require('../utils/mailcxHandler');

module.exports = (bot) => {
  const activeEmails = new Map(); // Keep track of session emails

  // .tempmail command
  bot.onText(/\.tempmail/, async (msg) => {
    const chatId = msg.chat.id;
    const email = generateRandomEmail();
    activeEmails.set(chatId, email);

    const message = `üì• *TempMail Ready:*\n\`${email}\`\n\nüîÑ ‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡ß©‡ß¶‡¶∏ ‡¶™‡¶∞ inbox auto-refresh ‡¶π‡¶¨‡ßá (Max 5 ‡¶¨‡¶æ‡¶∞)...`;
    const refreshBtn = {
      inline_keyboard: [
        [{ text: 'üîÑ Refresh Now', callback_data: 'refresh_now' }]
      ]
    };

    await bot.sendMessage(chatId, message, {
      parse_mode: 'Markdown',
      reply_markup: refreshBtn
    });
  });

  // Handle "Refresh Now" button
  bot.on('callback_query', async (query) => {
    const chatId = query.message.chat.id;
    const data = query.data;

    if (data === 'refresh_now') {
      await bot.answerCallbackQuery(query.id, { text: '‚ôªÔ∏è Refreshing...' });

      const email = activeEmails.get(chatId);
      if (!email) {
        return bot.sendMessage(chatId, '‚ö†Ô∏è ‡¶ï‡ßã‡¶®‡ßã active tempmail session ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø‡•§');
      }

      try {
        const messages = await fetchInbox(email);

        if (!messages || messages.length === 0) {
          return bot.sendMessage(chatId, `‚ùå \`${email}\` ‡¶è‡¶∞ ‡¶á‡¶®‡¶¨‡¶ï‡ßç‡¶∏‡ßá ‡¶ï‡ßã‡¶®‡ßã ‡¶Æ‡ßá‡¶á‡¶≤ ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø`, {
            parse_mode: 'Markdown'
          });
        }

        for (const mail of messages) {
          const full = await fetchFullEmail(email, mail.id);
          const content = full?.body || '[No content]';

          const formatted = `
üì® *‡¶®‡¶§‡ßÅ‡¶® ‡¶Æ‡ßá‡¶á‡¶≤ ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶ó‡ßá‡¶õ‡ßá!*
‚úâÔ∏è *From:* ${mail.from}
üìõ *Subject:* ${mail.subject || 'No subject'}
üßæ *Body:* 
\`\`\`
${content.slice(0, 1000)}
\`\`\`
          `;
          await bot.sendMessage(chatId, formatted, { parse_mode: 'Markdown' });
        }

      } catch (err) {
        console.error('Refresh error:', err.message);
        await bot.sendMessage(chatId, '‚ö†Ô∏è ‡¶Æ‡ßá‡¶á‡¶≤ ‡¶∞‡¶ø‡¶´‡ßç‡¶∞‡ßá‡¶∂‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶™‡¶∞‡ßá ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§');
      }
    }
  });
};
